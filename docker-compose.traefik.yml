version: '3.8'

services:
  dev-db:
    # image: postgres:16.1-alpine3.19
    container_name: dev-db
    restart: always
    hostname: dev-db
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      - internal

  db_dashboard:
    image: adminer
    container_name: db_dashboard
    restart: always
    ports:
      - 8081:8080
    networks:
      - proxy
      - internal
    labels:
      - traefik.enable=true
      - traefik.http.routers.db_dashboard.rule=Host(`db_dashboard.${DOMAINNAME}`)
      - traefik.http.routers.db_dashboard.entrypoints=web,websecure
      - traefik.http.routers.db_dashboard.tls=true
      - traefik.http.routers.db_dashboard.tls.certresolver=letsencrypt
      - traefik.docker.network=proxy

  mcp:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    ports:
      - "8000:8000"
    depends_on:
      - dev-db
    networks:
      - proxy
      - internal
    labels:
      - traefik.enable=true
      - traefik.http.routers.mcp.rule=Host(`mcp.${DOMAINNAME}`)
      - traefik.http.routers.mcp.entrypoints=web,websecure
      - traefik.http.routers.mcp.tls=true
      - traefik.http.routers.mcp.tls.certresolver=letsencrypt
      - traefik.docker.network=proxy


volumes:
  postgres_data:

networks:
  internal:
  proxy:
    external: true